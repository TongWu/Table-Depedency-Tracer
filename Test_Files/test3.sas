/**************************************************************************** 
 * Job:             POPULATE_BASE_ADM_PROFILE             A5TM814S.BN000M9H * 
 * Description:     Version 1.0                                             * 
 *                                                                          * 
 * Metadata Server: NESAS01R.IRASOR.GOV.SG                                  * 
 * Port:            8565                                                    * 
 * Location:        /ADMS_UDP/PopulateBaseOrTarget                          * 
 *                                                                          * 
 * Server:          SASDI                                 A5TM814S.AT000002 * 
 *                                                                          * 
 * Source Tables:   ST_TDW_TAXTYPE -                      A5TM814S.BH000LBM * 
 *                   ads_stg.ST_TDW_TAXTYPE                                 * 
 *                  ST_TDW_RELATIONSHIP -                 A5TM814S.BH000LBC * 
 *                   ads_stg.ST_TDW_RELATIONSHIP                            * 
 *                  ST_TDW_BANKRUPTCY -                   A5TM814S.BH000L8M * 
 *                   ads_stg.ST_TDW_BANKRUPTCY                              * 
 * Target Table:    BASE_ADM_PROFILE -                    A5TM814S.BH000KUE * 
 *                   UDPADMS.BASE_ADM_PROFILE                               * 
 *                                                                          * 
 * Generated on:    Wednesday, 12 August, 2020 6:42:13 PM SGT               * 
 * Generated by:    INL9BYP@IRAS                                            * 
 * Version:         SAS Data Integration Studio 4.904                       * 
 ****************************************************************************/ 

/* Generate the process id for job  */ 
%put Process ID: &SYSJOBID;

/* General macro variables  */ 
%let jobID = %quote(A5TM814S.BN000M9H);
%let etls_jobName = %nrquote(POPULATE_BASE_ADM_PROFILE);
%let etls_userID = %nrquote(INL9BYP@IRAS);

/* Setup to capture return codes  */ 
%global job_rc trans_rc sqlrc;
%let sysrc = 0;
%let job_rc = 0;
%let trans_rc = 0;
%let sqlrc = 0;
%let syscc = 0;
%global etls_stepStartTime; 
/* initialize syserr to 0 */ 
data _null_; run;

%macro rcSet(error); 
   %if (&error gt &trans_rc) %then 
      %let trans_rc = &error;
   %if (&error gt &job_rc) %then 
      %let job_rc = &error;
%mend rcSet; 

%macro rcSetDS(error); 
   if &error gt input(symget('trans_rc'),12.) then 
      call symput('trans_rc',trim(left(put(&error,12.))));
   if &error gt input(symget('job_rc'),12.) then 
      call symput('job_rc',trim(left(put(&error,12.))));
%mend rcSetDS; 

/* Create metadata macro variables */
%let IOMServer      = %nrquote(SASDI);
%let metaPort       = %nrquote(8565);
%let metaServer     = %nrquote(NESAS01R.IRASOR.GOV.SG);

/* Setup for capturing job status  */ 
%let etls_startTime = %sysfunc(datetime(),datetime.);
%let etls_recordsBefore = 0;
%let etls_recordsAfter = 0;
%let etls_lib = 0;
%let etls_table = 0;

%global etls_debug; 
%macro etls_setDebug; 
   %if %str(&etls_debug) ne 0 %then 
      OPTIONS MPRINT%str(;); 
%mend; 
%etls_setDebug; 

/*==========================================================================* 
 * Step:            Calculate Common Profile Indicators   A5TM814S.BP0012WC * 
 * Transform:       User Written                                            * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Tables:   ST_TDW_TAXTYPE -                      A5TM814S.BH000LBM * 
 *                   ads_stg.ST_TDW_TAXTYPE                                 * 
 *                  ST_TDW_RELATIONSHIP -                 A5TM814S.BH000LBC * 
 *                   ads_stg.ST_TDW_RELATIONSHIP                            * 
 *                  ST_TDW_BANKRUPTCY -                   A5TM814S.BH000L8M * 
 *                   ads_stg.ST_TDW_BANKRUPTCY                              * 
 * Target Table:    BASE_ADM_PROFILE -                    A5TM814S.BH000KUE * 
 *                   UDPADMS.BASE_ADM_PROFILE                               * 
 *                                                                          * 
 * User Written:    SourceCode                                              * 
 *==========================================================================*/ 

%let transformID = %quote(A5TM814S.BP0012WC);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let ETLS_SYSLAST = &SYSLAST;
/*---- Start of Pre-Process Code  ----*/ 


data _null_;
	test_date=mdy(month(date()),1,year(date()))-1;
	call symput('TESTDATE',test_date);
	FILTER_MONTHLY="CD_REL_STATUS=1";
	FILTER_HISTORICAL="(datepart(DT_EFFECTIVE) <= &ADMS_RunDate <= datepart(DT_END))";
	if &ADMS_RunDate=test_date then do;
		call symput("TAXAGT_FILTER",FILTER_MONTHLY);
	end;
	else do ;
		call symput("TAXAGT_FILTER",FILTER_HISTORICAL);
	end;
run;

%put &TAXAGT_FILTER;
%put &ADMS_RunDate;
/*---- End of Pre-Process Code  ----*/ 

%rcSet(&syserr); 
%rcSet(&sqlrc); 

%let SYSLAST = &ETLS_SYSLAST;

%let _INPUT_count = 3;
%let _INPUT = ads_stg.ST_TDW_TAXTYPE;
%let _INPUT_connect =  SERVER="10.7.78.52" AUTHDOMAIN="Hp_auth"  SCHEMA=ads_stg  PORT=10000
;
%let _INPUT_engine = HADOOP;
%let _INPUT_memtype = DATA;
%let _INPUT_options = %nrquote();
%let _INPUT_alter = %nrquote();
%let _INPUT_path = %nrquote(/ADMS_UDP/ADMS_UDP_DATA/PopulateStaging/ST_TDW_TAXTYPE%(Table%));
%let _INPUT_type = 1;
%let _INPUT_label = %nrquote();
%let _INPUT_filetype = PhysicalTable;

%let _INPUT1 = ads_stg.ST_TDW_TAXTYPE;
%let _INPUT1_connect =  SERVER="10.7.78.52" AUTHDOMAIN="Hp_auth"  SCHEMA=ads_stg  PORT=10000
;
%let _INPUT1_engine = HADOOP;
%let _INPUT1_memtype = DATA;
%let _INPUT1_options = %nrquote();
%let _INPUT1_alter = %nrquote();
%let _INPUT1_path = %nrquote(/ADMS_UDP/ADMS_UDP_DATA/PopulateStaging/ST_TDW_TAXTYPE%(Table%));
%let _INPUT1_type = 1;
%let _INPUT1_label = %nrquote();
%let _INPUT1_filetype = PhysicalTable;

%let _INPUT2 = ads_stg.ST_TDW_RELATIONSHIP;
%let _INPUT2_connect =  SERVER="10.7.78.52" AUTHDOMAIN="Hp_auth"  SCHEMA=ads_stg  PORT=10000
;
%let _INPUT2_engine = HADOOP;
%let _INPUT2_memtype = DATA;
%let _INPUT2_options = %nrquote();
%let _INPUT2_alter = %nrquote();
%let _INPUT2_path = %nrquote(/ADMS_UDP/ADMS_UDP_DATA/PopulateStaging/ST_TDW_RELATIONSHIP%(Table%));
%let _INPUT2_type = 1;
%let _INPUT2_label = %nrquote();
%let _INPUT2_filetype = PhysicalTable;

%let _INPUT3 = ads_stg.ST_TDW_BANKRUPTCY;
%let _INPUT3_connect =  SERVER="10.7.78.52" AUTHDOMAIN="Hp_auth"  SCHEMA=ads_stg  PORT=10000
;
%let _INPUT3_engine = HADOOP;
%let _INPUT3_memtype = DATA;
%let _INPUT3_options = %nrquote();
%let _INPUT3_alter = %nrquote();
%let _INPUT3_path = %nrquote(/ADMS_UDP/ADMS_UDP_DATA/PopulateStaging/ST_TDW_BANKRUPTCY%(Table%));
%let _INPUT3_type = 1;
%let _INPUT3_label = %nrquote();
%let _INPUT3_filetype = PhysicalTable;

%let _OUTPUT_count = 1;
%let _OUTPUT = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT_connect = null;
%let _OUTPUT_engine = BASE;
%let _OUTPUT_memtype = DATA;
%let _OUTPUT_options = %nrquote();
%let _OUTPUT_alter = %nrquote();
%let _OUTPUT_path = %nrquote(/ADMS_UDP/ADMS_UDP_DATA/Extract/BASE_ADM_PROFILE%(Table%));
%let _OUTPUT_type = 1;
%let _OUTPUT_label = %nrquote();
/* List of target columns to keep  */ 
%let _OUTPUT_keep = id_internal IN_BIZ_BANKRUPTCY_CURR IN_BIZ_BANKRUPTCY_PREV 
        IN_BIZ_BANKRUPTCY_START IN_BIZ_BANKRUPTCY_CURR_SP 
        IN_BIZ_BANKRUPTCY_PREV_SP IN_BIZ_BANKRUPTCY_START_SP 
        IN_BIZ_BANKRUPTCY_CURR_PSHP IN_BIZ_BANKRUPTCY_PREV_PSHP 
        IN_BIZ_BANKRUPTCY_START_PSHP IN_PF_TAX_AGENT ID_LATEST_TAX_AGENT 
        IN_TAX_AGENT_CHNG_CURR IN_TAX_AGENT_CHNG_PREV IN_TAX_AGENT_CHNG_START 
        IN_GST_ACTIVE IN_CT_ACTIVE IN_PT_ACTIVE IN_IIT_ACTIVE;
%let _OUTPUT_col_count = 19;
%let _OUTPUT_col0_name = id_internal;
%let _OUTPUT_col0_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT_col0_length = 8;
%let _OUTPUT_col0_type = ;
%let _OUTPUT_col0_format = 19.;
%let _OUTPUT_col0_informat = 19.;
%let _OUTPUT_col0_label = %nrquote(id_internal);
%let _OUTPUT_col0_input0 = id_internal;
%let _OUTPUT_col0_input0_table = ads_stg.ST_TDW_TAXTYPE;
%let _OUTPUT_col0_exp = id_internal;
%let _OUTPUT_col0_input = id_internal;
%let _OUTPUT_col0_input_count = 1;
%let _OUTPUT_col1_name = IN_BIZ_BANKRUPTCY_CURR;
%let _OUTPUT_col1_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT_col1_length = 1;
%let _OUTPUT_col1_type = $;
%let _OUTPUT_col1_format = ;
%let _OUTPUT_col1_informat = ;
%let _OUTPUT_col1_label = %nrquote();
%let _OUTPUT_col1_input0 = cd_bankrupt_status;
%let _OUTPUT_col1_input0_table = ads_stg.ST_TDW_BANKRUPTCY;
%let _OUTPUT_col1_exp = cd_bankrupt_status;
%let _OUTPUT_col1_input = cd_bankrupt_status;
%let _OUTPUT_col1_input_count = 1;
%let _OUTPUT_col2_name = IN_BIZ_BANKRUPTCY_PREV;
%let _OUTPUT_col2_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT_col2_length = 1;
%let _OUTPUT_col2_type = $;
%let _OUTPUT_col2_format = ;
%let _OUTPUT_col2_informat = ;
%let _OUTPUT_col2_label = %nrquote();
%let _OUTPUT_col2_input0 = cd_bankrupt_status;
%let _OUTPUT_col2_input0_table = ads_stg.ST_TDW_BANKRUPTCY;
%let _OUTPUT_col2_exp = cd_bankrupt_status;
%let _OUTPUT_col2_input = cd_bankrupt_status;
%let _OUTPUT_col2_input_count = 1;
%let _OUTPUT_col3_name = IN_BIZ_BANKRUPTCY_START;
%let _OUTPUT_col3_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT_col3_length = 1;
%let _OUTPUT_col3_type = $;
%let _OUTPUT_col3_format = ;
%let _OUTPUT_col3_informat = ;
%let _OUTPUT_col3_label = %nrquote();
%let _OUTPUT_col3_input0 = cd_bankrupt_status;
%let _OUTPUT_col3_input0_table = ads_stg.ST_TDW_BANKRUPTCY;
%let _OUTPUT_col3_exp = cd_bankrupt_status;
%let _OUTPUT_col3_input = cd_bankrupt_status;
%let _OUTPUT_col3_input_count = 1;
%let _OUTPUT_col4_name = IN_BIZ_BANKRUPTCY_CURR_SP;
%let _OUTPUT_col4_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT_col4_length = 1;
%let _OUTPUT_col4_type = $;
%let _OUTPUT_col4_format = ;
%let _OUTPUT_col4_informat = ;
%let _OUTPUT_col4_label = %nrquote();
%let _OUTPUT_col4_exp = ;
%let _OUTPUT_col4_input_count = 0;
%let _OUTPUT_col5_name = IN_BIZ_BANKRUPTCY_PREV_SP;
%let _OUTPUT_col5_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT_col5_length = 1;
%let _OUTPUT_col5_type = $;
%let _OUTPUT_col5_format = ;
%let _OUTPUT_col5_informat = ;
%let _OUTPUT_col5_label = %nrquote();
%let _OUTPUT_col5_exp = ;
%let _OUTPUT_col5_input_count = 0;
%let _OUTPUT_col6_name = IN_BIZ_BANKRUPTCY_START_SP;
%let _OUTPUT_col6_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT_col6_length = 1;
%let _OUTPUT_col6_type = $;
%let _OUTPUT_col6_format = ;
%let _OUTPUT_col6_informat = ;
%let _OUTPUT_col6_label = %nrquote();
%let _OUTPUT_col6_exp = ;
%let _OUTPUT_col6_input_count = 0;
%let _OUTPUT_col7_name = IN_BIZ_BANKRUPTCY_CURR_PSHP;
%let _OUTPUT_col7_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT_col7_length = 1;
%let _OUTPUT_col7_type = $;
%let _OUTPUT_col7_format = ;
%let _OUTPUT_col7_informat = ;
%let _OUTPUT_col7_label = %nrquote();
%let _OUTPUT_col7_exp = ;
%let _OUTPUT_col7_input_count = 0;
%let _OUTPUT_col8_name = IN_BIZ_BANKRUPTCY_PREV_PSHP;
%let _OUTPUT_col8_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT_col8_length = 1;
%let _OUTPUT_col8_type = $;
%let _OUTPUT_col8_format = ;
%let _OUTPUT_col8_informat = ;
%let _OUTPUT_col8_label = %nrquote();
%let _OUTPUT_col8_exp = ;
%let _OUTPUT_col8_input_count = 0;
%let _OUTPUT_col9_name = IN_BIZ_BANKRUPTCY_START_PSHP;
%let _OUTPUT_col9_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT_col9_length = 1;
%let _OUTPUT_col9_type = $;
%let _OUTPUT_col9_format = ;
%let _OUTPUT_col9_informat = ;
%let _OUTPUT_col9_label = %nrquote();
%let _OUTPUT_col9_exp = ;
%let _OUTPUT_col9_input_count = 0;
%let _OUTPUT_col10_name = IN_PF_TAX_AGENT;
%let _OUTPUT_col10_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT_col10_length = 1;
%let _OUTPUT_col10_type = $;
%let _OUTPUT_col10_format = ;
%let _OUTPUT_col10_informat = ;
%let _OUTPUT_col10_label = %nrquote();
%let _OUTPUT_col10_input0 = id_rel_internal;
%let _OUTPUT_col10_input0_table = ads_stg.ST_TDW_RELATIONSHIP;
%let _OUTPUT_col10_exp = id_rel_internal;
%let _OUTPUT_col10_input = id_rel_internal;
%let _OUTPUT_col10_input_count = 1;
%let _OUTPUT_col11_name = ID_LATEST_TAX_AGENT;
%let _OUTPUT_col11_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT_col11_length = 8;
%let _OUTPUT_col11_type = ;
%let _OUTPUT_col11_format = ;
%let _OUTPUT_col11_informat = ;
%let _OUTPUT_col11_label = %nrquote();
%let _OUTPUT_col11_input0 = id_rel_internal;
%let _OUTPUT_col11_input0_table = ads_stg.ST_TDW_RELATIONSHIP;
%let _OUTPUT_col11_exp = id_rel_internal;
%let _OUTPUT_col11_input = id_rel_internal;
%let _OUTPUT_col11_input_count = 1;
%let _OUTPUT_col12_name = IN_TAX_AGENT_CHNG_CURR;
%let _OUTPUT_col12_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT_col12_length = 1;
%let _OUTPUT_col12_type = $;
%let _OUTPUT_col12_format = ;
%let _OUTPUT_col12_informat = ;
%let _OUTPUT_col12_label = %nrquote();
%let _OUTPUT_col12_input0 = id_rel_internal;
%let _OUTPUT_col12_input0_table = ads_stg.ST_TDW_RELATIONSHIP;
%let _OUTPUT_col12_exp = id_rel_internal;
%let _OUTPUT_col12_input = id_rel_internal;
%let _OUTPUT_col12_input_count = 1;
%let _OUTPUT_col13_name = IN_TAX_AGENT_CHNG_PREV;
%let _OUTPUT_col13_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT_col13_length = 1;
%let _OUTPUT_col13_type = $;
%let _OUTPUT_col13_format = ;
%let _OUTPUT_col13_informat = ;
%let _OUTPUT_col13_label = %nrquote();
%let _OUTPUT_col13_input0 = id_rel_internal;
%let _OUTPUT_col13_input0_table = ads_stg.ST_TDW_RELATIONSHIP;
%let _OUTPUT_col13_exp = id_rel_internal;
%let _OUTPUT_col13_input = id_rel_internal;
%let _OUTPUT_col13_input_count = 1;
%let _OUTPUT_col14_name = IN_TAX_AGENT_CHNG_START;
%let _OUTPUT_col14_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT_col14_length = 1;
%let _OUTPUT_col14_type = $;
%let _OUTPUT_col14_format = ;
%let _OUTPUT_col14_informat = ;
%let _OUTPUT_col14_label = %nrquote();
%let _OUTPUT_col14_input0 = id_rel_internal;
%let _OUTPUT_col14_input0_table = ads_stg.ST_TDW_RELATIONSHIP;
%let _OUTPUT_col14_exp = id_rel_internal;
%let _OUTPUT_col14_input = id_rel_internal;
%let _OUTPUT_col14_input_count = 1;
%let _OUTPUT_col15_name = IN_GST_ACTIVE;
%let _OUTPUT_col15_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT_col15_length = 1;
%let _OUTPUT_col15_type = $;
%let _OUTPUT_col15_format = ;
%let _OUTPUT_col15_informat = ;
%let _OUTPUT_col15_label = %nrquote();
%let _OUTPUT_col15_input0 = cd_taxtype_status;
%let _OUTPUT_col15_input0_table = ads_stg.ST_TDW_TAXTYPE;
%let _OUTPUT_col15_exp = cd_taxtype_status;
%let _OUTPUT_col15_input = cd_taxtype_status;
%let _OUTPUT_col15_input_count = 1;
%let _OUTPUT_col16_name = IN_CT_ACTIVE;
%let _OUTPUT_col16_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT_col16_length = 1;
%let _OUTPUT_col16_type = $;
%let _OUTPUT_col16_format = ;
%let _OUTPUT_col16_informat = ;
%let _OUTPUT_col16_label = %nrquote();
%let _OUTPUT_col16_input0 = cd_taxtype_status;
%let _OUTPUT_col16_input0_table = ads_stg.ST_TDW_TAXTYPE;
%let _OUTPUT_col16_exp = cd_taxtype_status;
%let _OUTPUT_col16_input = cd_taxtype_status;
%let _OUTPUT_col16_input_count = 1;
%let _OUTPUT_col17_name = IN_PT_ACTIVE;
%let _OUTPUT_col17_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT_col17_length = 1;
%let _OUTPUT_col17_type = $;
%let _OUTPUT_col17_format = ;
%let _OUTPUT_col17_informat = ;
%let _OUTPUT_col17_label = %nrquote();
%let _OUTPUT_col17_input0 = cd_taxtype_status;
%let _OUTPUT_col17_input0_table = ads_stg.ST_TDW_TAXTYPE;
%let _OUTPUT_col17_exp = cd_taxtype_status;
%let _OUTPUT_col17_input = cd_taxtype_status;
%let _OUTPUT_col17_input_count = 1;
%let _OUTPUT_col18_name = IN_IIT_ACTIVE;
%let _OUTPUT_col18_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT_col18_length = 1;
%let _OUTPUT_col18_type = $;
%let _OUTPUT_col18_format = ;
%let _OUTPUT_col18_informat = ;
%let _OUTPUT_col18_label = %nrquote();
%let _OUTPUT_col18_exp = ;
%let _OUTPUT_col18_input_count = 0;
%let _OUTPUT_filetype = PhysicalTable;

%let _OUTPUT1 = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT1_connect = null;
%let _OUTPUT1_engine = BASE;
%let _OUTPUT1_memtype = DATA;
%let _OUTPUT1_options = %nrquote();
%let _OUTPUT1_alter = %nrquote();
%let _OUTPUT1_path = %nrquote(/ADMS_UDP/ADMS_UDP_DATA/Extract/BASE_ADM_PROFILE%(Table%));
%let _OUTPUT1_type = 1;
%let _OUTPUT1_label = %nrquote();
/* List of target columns to keep  */ 
%let _OUTPUT1_keep = id_internal IN_BIZ_BANKRUPTCY_CURR IN_BIZ_BANKRUPTCY_PREV 
        IN_BIZ_BANKRUPTCY_START IN_BIZ_BANKRUPTCY_CURR_SP 
        IN_BIZ_BANKRUPTCY_PREV_SP IN_BIZ_BANKRUPTCY_START_SP 
        IN_BIZ_BANKRUPTCY_CURR_PSHP IN_BIZ_BANKRUPTCY_PREV_PSHP 
        IN_BIZ_BANKRUPTCY_START_PSHP IN_PF_TAX_AGENT ID_LATEST_TAX_AGENT 
        IN_TAX_AGENT_CHNG_CURR IN_TAX_AGENT_CHNG_PREV IN_TAX_AGENT_CHNG_START 
        IN_GST_ACTIVE IN_CT_ACTIVE IN_PT_ACTIVE IN_IIT_ACTIVE;
%let _OUTPUT1_col_count = 19;
%let _OUTPUT1_col0_name = id_internal;
%let _OUTPUT1_col0_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT1_col0_length = 8;
%let _OUTPUT1_col0_type = ;
%let _OUTPUT1_col0_format = 19.;
%let _OUTPUT1_col0_informat = 19.;
%let _OUTPUT1_col0_label = %nrquote(id_internal);
%let _OUTPUT1_col0_input0 = id_internal;
%let _OUTPUT1_col0_input0_table = ads_stg.ST_TDW_TAXTYPE;
%let _OUTPUT1_col0_exp = id_internal;
%let _OUTPUT1_col0_input = id_internal;
%let _OUTPUT1_col0_input_count = 1;
%let _OUTPUT1_col1_name = IN_BIZ_BANKRUPTCY_CURR;
%let _OUTPUT1_col1_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT1_col1_length = 1;
%let _OUTPUT1_col1_type = $;
%let _OUTPUT1_col1_format = ;
%let _OUTPUT1_col1_informat = ;
%let _OUTPUT1_col1_label = %nrquote();
%let _OUTPUT1_col1_input0 = cd_bankrupt_status;
%let _OUTPUT1_col1_input0_table = ads_stg.ST_TDW_BANKRUPTCY;
%let _OUTPUT1_col1_exp = cd_bankrupt_status;
%let _OUTPUT1_col1_input = cd_bankrupt_status;
%let _OUTPUT1_col1_input_count = 1;
%let _OUTPUT1_col2_name = IN_BIZ_BANKRUPTCY_PREV;
%let _OUTPUT1_col2_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT1_col2_length = 1;
%let _OUTPUT1_col2_type = $;
%let _OUTPUT1_col2_format = ;
%let _OUTPUT1_col2_informat = ;
%let _OUTPUT1_col2_label = %nrquote();
%let _OUTPUT1_col2_input0 = cd_bankrupt_status;
%let _OUTPUT1_col2_input0_table = ads_stg.ST_TDW_BANKRUPTCY;
%let _OUTPUT1_col2_exp = cd_bankrupt_status;
%let _OUTPUT1_col2_input = cd_bankrupt_status;
%let _OUTPUT1_col2_input_count = 1;
%let _OUTPUT1_col3_name = IN_BIZ_BANKRUPTCY_START;
%let _OUTPUT1_col3_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT1_col3_length = 1;
%let _OUTPUT1_col3_type = $;
%let _OUTPUT1_col3_format = ;
%let _OUTPUT1_col3_informat = ;
%let _OUTPUT1_col3_label = %nrquote();
%let _OUTPUT1_col3_input0 = cd_bankrupt_status;
%let _OUTPUT1_col3_input0_table = ads_stg.ST_TDW_BANKRUPTCY;
%let _OUTPUT1_col3_exp = cd_bankrupt_status;
%let _OUTPUT1_col3_input = cd_bankrupt_status;
%let _OUTPUT1_col3_input_count = 1;
%let _OUTPUT1_col4_name = IN_BIZ_BANKRUPTCY_CURR_SP;
%let _OUTPUT1_col4_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT1_col4_length = 1;
%let _OUTPUT1_col4_type = $;
%let _OUTPUT1_col4_format = ;
%let _OUTPUT1_col4_informat = ;
%let _OUTPUT1_col4_label = %nrquote();
%let _OUTPUT1_col4_exp = ;
%let _OUTPUT1_col4_input_count = 0;
%let _OUTPUT1_col5_name = IN_BIZ_BANKRUPTCY_PREV_SP;
%let _OUTPUT1_col5_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT1_col5_length = 1;
%let _OUTPUT1_col5_type = $;
%let _OUTPUT1_col5_format = ;
%let _OUTPUT1_col5_informat = ;
%let _OUTPUT1_col5_label = %nrquote();
%let _OUTPUT1_col5_exp = ;
%let _OUTPUT1_col5_input_count = 0;
%let _OUTPUT1_col6_name = IN_BIZ_BANKRUPTCY_START_SP;
%let _OUTPUT1_col6_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT1_col6_length = 1;
%let _OUTPUT1_col6_type = $;
%let _OUTPUT1_col6_format = ;
%let _OUTPUT1_col6_informat = ;
%let _OUTPUT1_col6_label = %nrquote();
%let _OUTPUT1_col6_exp = ;
%let _OUTPUT1_col6_input_count = 0;
%let _OUTPUT1_col7_name = IN_BIZ_BANKRUPTCY_CURR_PSHP;
%let _OUTPUT1_col7_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT1_col7_length = 1;
%let _OUTPUT1_col7_type = $;
%let _OUTPUT1_col7_format = ;
%let _OUTPUT1_col7_informat = ;
%let _OUTPUT1_col7_label = %nrquote();
%let _OUTPUT1_col7_exp = ;
%let _OUTPUT1_col7_input_count = 0;
%let _OUTPUT1_col8_name = IN_BIZ_BANKRUPTCY_PREV_PSHP;
%let _OUTPUT1_col8_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT1_col8_length = 1;
%let _OUTPUT1_col8_type = $;
%let _OUTPUT1_col8_format = ;
%let _OUTPUT1_col8_informat = ;
%let _OUTPUT1_col8_label = %nrquote();
%let _OUTPUT1_col8_exp = ;
%let _OUTPUT1_col8_input_count = 0;
%let _OUTPUT1_col9_name = IN_BIZ_BANKRUPTCY_START_PSHP;
%let _OUTPUT1_col9_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT1_col9_length = 1;
%let _OUTPUT1_col9_type = $;
%let _OUTPUT1_col9_format = ;
%let _OUTPUT1_col9_informat = ;
%let _OUTPUT1_col9_label = %nrquote();
%let _OUTPUT1_col9_exp = ;
%let _OUTPUT1_col9_input_count = 0;
%let _OUTPUT1_col10_name = IN_PF_TAX_AGENT;
%let _OUTPUT1_col10_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT1_col10_length = 1;
%let _OUTPUT1_col10_type = $;
%let _OUTPUT1_col10_format = ;
%let _OUTPUT1_col10_informat = ;
%let _OUTPUT1_col10_label = %nrquote();
%let _OUTPUT1_col10_input0 = id_rel_internal;
%let _OUTPUT1_col10_input0_table = ads_stg.ST_TDW_RELATIONSHIP;
%let _OUTPUT1_col10_exp = id_rel_internal;
%let _OUTPUT1_col10_input = id_rel_internal;
%let _OUTPUT1_col10_input_count = 1;
%let _OUTPUT1_col11_name = ID_LATEST_TAX_AGENT;
%let _OUTPUT1_col11_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT1_col11_length = 8;
%let _OUTPUT1_col11_type = ;
%let _OUTPUT1_col11_format = ;
%let _OUTPUT1_col11_informat = ;
%let _OUTPUT1_col11_label = %nrquote();
%let _OUTPUT1_col11_input0 = id_rel_internal;
%let _OUTPUT1_col11_input0_table = ads_stg.ST_TDW_RELATIONSHIP;
%let _OUTPUT1_col11_exp = id_rel_internal;
%let _OUTPUT1_col11_input = id_rel_internal;
%let _OUTPUT1_col11_input_count = 1;
%let _OUTPUT1_col12_name = IN_TAX_AGENT_CHNG_CURR;
%let _OUTPUT1_col12_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT1_col12_length = 1;
%let _OUTPUT1_col12_type = $;
%let _OUTPUT1_col12_format = ;
%let _OUTPUT1_col12_informat = ;
%let _OUTPUT1_col12_label = %nrquote();
%let _OUTPUT1_col12_input0 = id_rel_internal;
%let _OUTPUT1_col12_input0_table = ads_stg.ST_TDW_RELATIONSHIP;
%let _OUTPUT1_col12_exp = id_rel_internal;
%let _OUTPUT1_col12_input = id_rel_internal;
%let _OUTPUT1_col12_input_count = 1;
%let _OUTPUT1_col13_name = IN_TAX_AGENT_CHNG_PREV;
%let _OUTPUT1_col13_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT1_col13_length = 1;
%let _OUTPUT1_col13_type = $;
%let _OUTPUT1_col13_format = ;
%let _OUTPUT1_col13_informat = ;
%let _OUTPUT1_col13_label = %nrquote();
%let _OUTPUT1_col13_input0 = id_rel_internal;
%let _OUTPUT1_col13_input0_table = ads_stg.ST_TDW_RELATIONSHIP;
%let _OUTPUT1_col13_exp = id_rel_internal;
%let _OUTPUT1_col13_input = id_rel_internal;
%let _OUTPUT1_col13_input_count = 1;
%let _OUTPUT1_col14_name = IN_TAX_AGENT_CHNG_START;
%let _OUTPUT1_col14_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT1_col14_length = 1;
%let _OUTPUT1_col14_type = $;
%let _OUTPUT1_col14_format = ;
%let _OUTPUT1_col14_informat = ;
%let _OUTPUT1_col14_label = %nrquote();
%let _OUTPUT1_col14_input0 = id_rel_internal;
%let _OUTPUT1_col14_input0_table = ads_stg.ST_TDW_RELATIONSHIP;
%let _OUTPUT1_col14_exp = id_rel_internal;
%let _OUTPUT1_col14_input = id_rel_internal;
%let _OUTPUT1_col14_input_count = 1;
%let _OUTPUT1_col15_name = IN_GST_ACTIVE;
%let _OUTPUT1_col15_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT1_col15_length = 1;
%let _OUTPUT1_col15_type = $;
%let _OUTPUT1_col15_format = ;
%let _OUTPUT1_col15_informat = ;
%let _OUTPUT1_col15_label = %nrquote();
%let _OUTPUT1_col15_input0 = cd_taxtype_status;
%let _OUTPUT1_col15_input0_table = ads_stg.ST_TDW_TAXTYPE;
%let _OUTPUT1_col15_exp = cd_taxtype_status;
%let _OUTPUT1_col15_input = cd_taxtype_status;
%let _OUTPUT1_col15_input_count = 1;
%let _OUTPUT1_col16_name = IN_CT_ACTIVE;
%let _OUTPUT1_col16_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT1_col16_length = 1;
%let _OUTPUT1_col16_type = $;
%let _OUTPUT1_col16_format = ;
%let _OUTPUT1_col16_informat = ;
%let _OUTPUT1_col16_label = %nrquote();
%let _OUTPUT1_col16_input0 = cd_taxtype_status;
%let _OUTPUT1_col16_input0_table = ads_stg.ST_TDW_TAXTYPE;
%let _OUTPUT1_col16_exp = cd_taxtype_status;
%let _OUTPUT1_col16_input = cd_taxtype_status;
%let _OUTPUT1_col16_input_count = 1;
%let _OUTPUT1_col17_name = IN_PT_ACTIVE;
%let _OUTPUT1_col17_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT1_col17_length = 1;
%let _OUTPUT1_col17_type = $;
%let _OUTPUT1_col17_format = ;
%let _OUTPUT1_col17_informat = ;
%let _OUTPUT1_col17_label = %nrquote();
%let _OUTPUT1_col17_input0 = cd_taxtype_status;
%let _OUTPUT1_col17_input0_table = ads_stg.ST_TDW_TAXTYPE;
%let _OUTPUT1_col17_exp = cd_taxtype_status;
%let _OUTPUT1_col17_input = cd_taxtype_status;
%let _OUTPUT1_col17_input_count = 1;
%let _OUTPUT1_col18_name = IN_IIT_ACTIVE;
%let _OUTPUT1_col18_table = UDPADMS.BASE_ADM_PROFILE;
%let _OUTPUT1_col18_length = 1;
%let _OUTPUT1_col18_type = $;
%let _OUTPUT1_col18_format = ;
%let _OUTPUT1_col18_informat = ;
%let _OUTPUT1_col18_label = %nrquote();
%let _OUTPUT1_col18_exp = ;
%let _OUTPUT1_col18_input_count = 0;
%let _OUTPUT1_filetype = PhysicalTable;

/*---- Start of User Written Code  ----*/ 

/* Extract CTD Base here */
options symbolgen mlogic;
 
data TAXTYPE;
	set ADS_STG.ST_TDW_TAXTYPE;
	if CD_TAXTYPE_STATUS = 100 and CD_TAX in (101,102,200,300) and 
		(datepart(DT_EFFECTIVE) <= &adms_rundate <= datepart(DT_END)) 
		and datepart(DT_EFFECTIVE) not in ('01JAN1753'd, '31DEC9999'd);
run;

data RELATIONSHIP;
	set ADS_STG.ST_TDW_RELATIONSHIP;
	if (CD_RELATIONSHIP in (503,508,509,514,304,203,101,102,103,104,105,301,302,303,512,524,310,523)) and 
		(datepart(DT_EFFECTIVE) <= &adms_rundate  <= datepart(DT_END)) and
		datepart(DT_EFFECTIVE) not in ('01JAN1753'd, '31DEC9999'd);
run;

data BANKRUPTCY;
set ADS_STG.ST_TDW_BANKRUPTCY;
	if CD_BANKRUPT_STATUS in (1,2,4,7,9)  
		and datepart(DT_EFFECTIVE) not in ('01JAN1753'd, '31DEC9999'd);
run;

/* to derive tax type active indicators */
data TaxCT (keep=ID_INTERNAL IN_CT_ACTIVE)
		TaxGST (keep=ID_INTERNAL IN_GST_ACTIVE)
		TaxPT (keep=ID_INTERNAL IN_PT_ACTIVE)
		TaxIIT (keep=ID_INTERNAL IN_IIT_ACTIVE);
	set TAXTYPE;
	if CD_TAX = 101 then do;
		IN_IIT_ACTIVE='1';
		output TaxIIT; 
			end;
	if CD_TAX = 102 then do;
		IN_CT_ACTIVE='1';
		output TaxCT; 
			end;
	if CD_TAX = 200 then do;
		IN_PT_ACTIVE='1';
		output TaxPT; 
			end;
	if CD_TAX = 300 then do;
		IN_GST_ACTIVE='1';
		output TaxGST; 
			end;
run;

/* PT Active */
data RelPT (keep = ID_INTERNAL ID_REL_INTERNAL);
	set RELATIONSHIP;
	where CD_RELATIONSHIP in (508,509,514);
run;

proc sql;
	create table ID_TaxPT as
	select a.ID_REL_INTERNAL as ID_INTERNAL,
		b.IN_PT_ACTIVE as IN_PT_ACTIVE
	from RelPT as a, TaxPT as b
	where a.ID_INTERNAL=b.ID_INTERNAL
;
quit;

proc sort data=ID_TaxPT nodupkey;
by id_internal;
run;

/* GST Active - Company Registered, Group Registered, Division Registered */
data RelGST (keep = ID_INTERNAL ID_REL_INTERNAL);
	set RELATIONSHIP;
	where CD_RELATIONSHIP in (310,523,524);
run;

proc sql;
	create table ID_GST_ADDL as
	select a.ID_REL_INTERNAL as ID_INTERNAL,
			'1' as IN_GST_ACTIVE
	from RelGST as a, TaxGST as b
	where a.ID_INTERNAL=b.ID_INTERNAL;
quit;

data ID_TaxGST;
	set TaxGST ID_GST_ADDL;
run;

proc sort data=ID_TaxGST nodupkey;
	by ID_INTERNAL;
run;

/* CT Active */

proc sort data=TaxCT out=ID_TaxCT nodupkey;
	by ID_INTERNAL;
run;

/* IIT Active */

proc sort data=TaxIIT out=ID_TaxIIT nodupkey;
	by ID_INTERNAL;
run;

/* To derive bankruptcy indicators */
data RelDir (keep = ID_INTERNAL ID_REL_INTERNAL);
	set RELATIONSHIP;
	where CD_RELATIONSHIP = 304;
run;

proc sort data=RelDIR;	by ID_REL_INTERNAL;	run;
proc sort data=BANKRUPTCY nodupkey;	by ID_INTERNAL ;	run;

data RelDIR_Bankrupt;
	merge RelDIR (in=a rename=(ID_INTERNAL=ID_COY ID_REL_INTERNAL=ID_INTERNAL )) BANKRUPTCY (in=b);
	by ID_INTERNAL;
	if a and b;
run;

/*FOR SP*/
data RelDir_SP (keep = ID_INTERNAL ID_REL_INTERNAL);
	set RELATIONSHIP;
	where CD_RELATIONSHIP = 301;
run;

proc sort data=RelDIR_SP;	by ID_REL_INTERNAL;	run;


data RelDIR_Bankrupt_SP;
	merge RelDIR_SP (in=a rename=(ID_INTERNAL=ID_COY ID_REL_INTERNAL=ID_INTERNAL )) BANKRUPTCY (in=b);
	by ID_INTERNAL;
	if a and b;
run;

/*FOR PSHIP*/
data RelDir_PSHP (keep = ID_INTERNAL ID_REL_INTERNAL);
	set RELATIONSHIP;
	where CD_RELATIONSHIP IN (302,303);
run;

proc sort data=RelDIR_PSHP;	by ID_REL_INTERNAL;	run;


data RelDIR_Bankrupt_PSHP;
	merge RelDIR_PSHP (in=a rename=(ID_INTERNAL=ID_COY ID_REL_INTERNAL=ID_INTERNAL )) BANKRUPTCY (in=b);
	by ID_INTERNAL;
	if a and b;
run;
 

data CY1 CY2 CY3 CY4;
	set RelDIR_Bankrupt;
	if (datepart(DT_EFFECTIVE) <= &adms_rundate <= datepart(DT_END)) then output CY1;
	if (YEAR(datepart(DT_EFFECTIVE)) <= &Curr_YA-1 <= YEAR(datepart(DT_END))) then output CY2;
	if (YEAR(datepart(DT_EFFECTIVE)) <= &Curr_YA-2 <= YEAR(datepart(DT_END))) then output CY3;
	if (YEAR(datepart(DT_EFFECTIVE)) <= &Curr_YA-3 <= YEAR(datepart(DT_END))) then output CY4;
run;

/*SP*/
data CY1_SP CY2_SP CY3_SP CY4_SP;
	set RelDIR_Bankrupt_SP;
	if (datepart(DT_EFFECTIVE) <= &adms_rundate <= datepart(DT_END)) then output CY1_SP;
	if (YEAR(datepart(DT_EFFECTIVE)) <= &Curr_YA-1 <= YEAR(datepart(DT_END))) then output CY2_SP;
	if (YEAR(datepart(DT_EFFECTIVE)) <= &Curr_YA-2 <= YEAR(datepart(DT_END))) then output CY3_SP;
	if (YEAR(datepart(DT_EFFECTIVE)) <= &Curr_YA-3 <= YEAR(datepart(DT_END))) then output CY4_SP;
run;
/*PSHIP*/
data CY1_PSHP CY2_PSHP CY3_PSHP CY4_PSHP;
	set RelDIR_Bankrupt_PSHP;
	if (datepart(DT_EFFECTIVE) <= &adms_rundate <= datepart(DT_END)) then output CY1_PSHP;
	if (YEAR(datepart(DT_EFFECTIVE)) <= &Curr_YA-1 <= YEAR(datepart(DT_END))) then output CY2_PSHP;
	if (YEAR(datepart(DT_EFFECTIVE)) <= &Curr_YA-2 <= YEAR(datepart(DT_END))) then output CY3_PSHP;
	if (YEAR(datepart(DT_EFFECTIVE)) <= &Curr_YA-3 <= YEAR(datepart(DT_END))) then output CY4_PSHP;
run;

data ID_BANKRUPT_;
	merge CY1 (in=cy1) CY2 (in=cy2) CY3 (in=cy3) CY4 (in=cy4);
	by ID_INTERNAL;
	if cy1 then IN_BIZ_BANKRUPTCY_CURR=1; else IN_BIZ_BANKRUPTCY_CURR=0;
	if cy2 then IN_BIZ_BANKRUPTCY_PREV=1; else IN_BIZ_BANKRUPTCY_PREV=0;
	if cy1 or cy2 or cy3 or cy4 then IN_BIZ_BANKRUPTCY_START=1; else IN_BIZ_BANKRUPTCY_START=0;
	keep ID_COY ID_INTERNAL IN_BIZ_BANKRUPTCY_CURR IN_BIZ_BANKRUPTCY_PREV IN_BIZ_BANKRUPTCY_START;
run;

/*SP*/
data ID_BANKRUPT_SP;
	merge CY1_SP (in=cy1) CY2_SP (in=cy2) CY3_SP (in=cy3) CY4_SP (in=cy4);
	by ID_INTERNAL;
	if cy1 then IN_BIZ_BANKRUPTCY_CURR=1; else IN_BIZ_BANKRUPTCY_CURR=0;
	if cy2 then IN_BIZ_BANKRUPTCY_PREV=1; else IN_BIZ_BANKRUPTCY_PREV=0;
	if cy1 or cy2 or cy3 or cy4 then IN_BIZ_BANKRUPTCY_START=1; else IN_BIZ_BANKRUPTCY_START=0;
	keep ID_COY ID_INTERNAL IN_BIZ_BANKRUPTCY_CURR IN_BIZ_BANKRUPTCY_PREV IN_BIZ_BANKRUPTCY_START;
run;
/*PSHIP*/
data ID_BANKRUPT_PSHP;
	merge CY1_PSHP (in=cy1) CY2_PSHP (in=cy2) CY3_PSHP (in=cy3) CY4_PSHP (in=cy4);
	by ID_INTERNAL;
	if cy1 then IN_BIZ_BANKRUPTCY_CURR=1; else IN_BIZ_BANKRUPTCY_CURR=0;
	if cy2 then IN_BIZ_BANKRUPTCY_PREV=1; else IN_BIZ_BANKRUPTCY_PREV=0;
	if cy1 or cy2 or cy3 or cy4 then IN_BIZ_BANKRUPTCY_START=1; else IN_BIZ_BANKRUPTCY_START=0;
	keep ID_COY ID_INTERNAL IN_BIZ_BANKRUPTCY_CURR IN_BIZ_BANKRUPTCY_PREV IN_BIZ_BANKRUPTCY_START;
run;

proc sql;
create table ID_BANKRUPT as
select id_coy as id_internal,
put(max(IN_BIZ_BANKRUPTCY_CURR),1.) as IN_BIZ_BANKRUPTCY_CURR,
put(max(IN_BIZ_BANKRUPTCY_PREV),1.) as IN_BIZ_BANKRUPTCY_PREV,
put(max(IN_BIZ_BANKRUPTCY_START),1.) as IN_BIZ_BANKRUPTCY_START
from ID_BANKRUPT_
group by id_coy;
quit;
/*SP*/
proc sql;
create table ID_BANKRUPT_SP2 as
select id_coy as id_internal,
put(max(IN_BIZ_BANKRUPTCY_CURR),1.) as IN_BIZ_BANKRUPTCY_CURR_SP,
put(max(IN_BIZ_BANKRUPTCY_PREV),1.) as IN_BIZ_BANKRUPTCY_PREV_SP,
put(max(IN_BIZ_BANKRUPTCY_START),1.) as IN_BIZ_BANKRUPTCY_START_SP
from ID_BANKRUPT_SP
group by id_coy;
quit;
/*PSHP*/
proc sql;
create table ID_BANKRUPT_PSHP2 as
select id_coy as id_internal,
put(max(IN_BIZ_BANKRUPTCY_CURR),1.) as IN_BIZ_BANKRUPTCY_CURR_PSHP,
put(max(IN_BIZ_BANKRUPTCY_PREV),1.) as IN_BIZ_BANKRUPTCY_PREV_PSHP,
put(max(IN_BIZ_BANKRUPTCY_START),1.) as IN_BIZ_BANKRUPTCY_START_PSHP
from ID_BANKRUPT_PSHP
group by id_coy;
quit;

/* To deriver tax agent indicators */
/*&TAXAGT_FILTER*/

data RelAgt (keep = ID_INTERNAL ID_REL_INTERNAL DT_EFFECTIVE DT_END TS_LAST_UPDATE CD_REL_STATUS);
	set ADS_STG.ST_TDW_RELATIONSHIP;
	where (CD_RELATIONSHIP = 503) and datepart(DT_EFFECTIVE) not in ('01JAN1753'd, '31DEC9999'd);
run;

data RelAgt_CY1 RelAgt_CY2 RelAgt_CY3 RelAgt_CY4;
	set RelAgt;
	if &TAXAGT_FILTER then output RelAgt_CY1;
	if (YEAR(datepart(DT_EFFECTIVE)) <= &Curr_YA-1 <= YEAR(datepart(DT_END))) then output RelAgt_CY2;
	if (YEAR(datepart(DT_EFFECTIVE)) <= &Curr_YA-2 <= YEAR(datepart(DT_END))) then output RelAgt_CY3;
	if (YEAR(datepart(DT_EFFECTIVE)) <= &Curr_YA-3 <= YEAR(datepart(DT_END))) then output RelAgt_CY4;
run;

data RelAgt_CY1;
set RelAgt_CY1;
PF_TAX_AGENT=1;
run;

data RelAgt_CY2;
set RelAgt_CY2;
PF_TAX_AGENT2=1;
run;

data RelAgt_CY3;
set RelAgt_CY3;
PF_TAX_AGENT3=1;
run;

data RelAgt_CY4;
set RelAgt_CY4;
PF_TAX_AGENT4=1;
run;

proc sort data=RelAgt_CY1;	
	by ID_INTERNAL descending DT_END descending DT_EFFECTIVE descending TS_LAST_UPDATE;	run;
proc sort data=RelAgt_CY2;	
	by ID_INTERNAL descending DT_END descending DT_EFFECTIVE descending TS_LAST_UPDATE;	run;
proc sort data=RelAgt_CY3;	
	by ID_INTERNAL descending DT_END descending DT_EFFECTIVE descending TS_LAST_UPDATE;	run;
proc sort data=RelAgt_CY4;	
	by ID_INTERNAL descending DT_END descending DT_EFFECTIVE descending TS_LAST_UPDATE;	run;

proc sort data=RelAgt_CY1 nodupkey;	
	by ID_INTERNAL;	run;
proc sort data=RelAgt_CY2 nodupkey;	
	by ID_INTERNAL;	run;
proc sort data=RelAgt_CY3 nodupkey;	
	by ID_INTERNAL;	run;
proc sort data=RelAgt_CY4 nodupkey;	
	by ID_INTERNAL;	run;

data ID_RelAgt;
	merge RelAgt_CY1 (in=cy1 rename=( ID_REL_INTERNAL=TxAgt1) )
			RelAgt_CY2 (in=cy2 rename=( ID_REL_INTERNAL=TxAgt2) ) 
			RelAgt_CY3 (in=cy3 rename=( ID_REL_INTERNAL=TxAgt3))
			RelAgt_CY4 (in=cy4 rename=( ID_REL_INTERNAL=TxAgt4));
	by ID_INTERNAL;
	if PF_TAX_AGENT ne 1 then IN_PF_TAX_AGENT='0'; else IN_PF_TAX_AGENT='1';
	ID_LATEST_TAX_AGENT=TxAgt1;
	if TxAgt1 ne TxAgt2 and PF_TAX_AGENT=1 and PF_TAX_AGENT2=1 then IN_TAX_AGENT_CHNG_CURR='1'; else IN_TAX_AGENT_CHNG_CURR='0';
	if TxAgt2 ne TxAgt3 and PF_TAX_AGENT2=1 and PF_TAX_AGENT3=1 then IN_TAX_AGENT_CHNG_PREV='1'; else IN_TAX_AGENT_CHNG_PREV='0';
	if (TxAgt1 ne TxAgt2 or TxAgt2 ne TxAgt3 or TxAgt3 ne TxAgt4) and PF_TAX_AGENT=1 and PF_TAX_AGENT2=1 and PF_TAX_AGENT3=1 and PF_TAX_AGENT4=1
			then IN_TAX_AGENT_CHNG_START='1'; else IN_TAX_AGENT_CHNG_START='0';
	keep ID_INTERNAL IN_PF_TAX_AGENT ID_LATEST_TAX_AGENT IN_TAX_AGENT_CHNG_CURR IN_TAX_AGENT_CHNG_PREV IN_TAX_AGENT_CHNG_START;
run;

data UDPADMS.BASE_ADM_PROFILE;
	merge ID_BANKRUPT ID_BANKRUPT_SP2 ID_BANKRUPT_PSHP2 ID_RelAgt ID_TaxGST ID_TaxCT ID_TaxPT ID_TaxIIT;
	by ID_INTERNAL;
run;

proc sort data=UDPADMS.BASE_ADM_PROFILE nodupkey;
	by ID_INTERNAL;
run;

data &_OUTPUT;
	set &SYSLAST;
run;

/*---- End of User Written Code  ----*/ 

%rcSet(&syserr); 
%rcSet(&sqlrc); 


/** Step end Calculate Common Profile Indicators **/

%let etls_endTime = %sysfunc(datetime(),datetime.);

